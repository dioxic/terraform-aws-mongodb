#cloud-config

write_files:
  - encoding: b64
    content: ${mongod_conf}
    path: /etc/mongod.conf
  - encoding: b64
    content: ${readahead_service}
    path: /etc/systemd/system/readahead.service

runcmd:
  -
    - bash
    - -c
    - |
      for i in {1..120}; do
        if [[ -e /dev/${data_block_device} ]]; then
          if ! file -sL /dev/${data_block_device} | grep -isq XFS; then ## Disk not formated, lets format it
            mkfs.xfs -L mongodata /dev/${data_block_device}
          fi
          mkdir -p ${mount_point}
          echo "$(blkid  /dev/${data_block_device} | cut -d' ' -f3) ${mount_point}  xfs  defaults,nofail,noatime  0 2" >> /etc/fstab
          continue
        fi
        echo "Mongo Data Device /dev/${data_block_device} not present, sleeping another second, try $i/120"
        sleep 1
      done
      file -sL /dev/${data_block_device} | grep -isq XFS || echo "ERROR: Timeout waiting after 2 minutes for mongo data volume to appear: /dev/${data_block_device}"
  - [ mount, -a ]
  - [ mkdir, -p, ${db_path} ]
  - [ chown, -R, "mongod:mongod", ${db_path} ]
  - [ systemctl, daemon-reload ]
  - [ systemctl, enable, readahead.service ]
  - [ systemctl, start, readahead.service ]
  - [ sh, -c, ${bootstrap_path} wait network ]
  - [ sh, -c, ${bootstrap_path} wait dns local ]
  - [ systemctl, start, mongod.service ]
%{ if initiate ~}
  - ${bootstrap_path} initiate '${fqdn}:${port}' '${jsonencode(rs_config)}'
%{ endif ~}
%{ if add_shard ~}
  - ${bootstrap_path} add_shard '${router_uri}' '${rs_name}' '${join(",", rs_hosts)}' '${shard_name}'
%{ endif ~}